<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Security on Code Before Breach</title><link>https://windshock.github.io/en/tags/security/</link><description>Recent content in Security on Code Before Breach</description><generator>Hugo -- 0.145.0</generator><language>en-US</language><lastBuildDate>Mon, 12 May 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://windshock.github.io/en/tags/security/index.xml" rel="self" type="application/rss+xml"/><item><title>Dicer Module Vulnerability Mitigation Guide: CVE-2022-24434</title><link>https://windshock.github.io/en/post/2025-05-12-cve-cve-2022-24434-dicer/</link><pubDate>Mon, 12 May 2025 00:00:00 +0000</pubDate><guid>https://windshock.github.io/en/post/2025-05-12-cve-cve-2022-24434-dicer/</guid><description>This guide analyzes a vulnerability in the Dicer module indirectly affecting Multer, and provides a practical mitigation strategy. It serves as a real-world example of dealing with unmaintained open source dependencies.</description></item><item><title>How I Managed Unmaintained Open Source with Gmail and Snyk Alerts</title><link>https://windshock.github.io/en/post/2025-05-12-managing-unmaintained-open-source-with-snyk-and-gmail/</link><pubDate>Mon, 12 May 2025 00:00:00 +0000</pubDate><guid>https://windshock.github.io/en/post/2025-05-12-managing-unmaintained-open-source-with-snyk-and-gmail/</guid><description>When API access falls short, automation through Gmail and Apps Script becomes essential. Here&amp;rsquo;s how I used Google Apps Script to collect Snyk vulnerability alerts and patch data automatically.</description></item><item><title>There’s No Such Thing as a Free Lunch, But Security Was Free</title><link>https://windshock.github.io/en/post/2025-04-17-theres-no-such-thing-as-a-free-lunch-but-security-was-free/</link><pubDate>Thu, 17 Apr 2025 00:00:00 +0000</pubDate><guid>https://windshock.github.io/en/post/2025-04-17-theres-no-such-thing-as-a-free-lunch-but-security-was-free/</guid><description>The global security community has depended on CVE for decades without ever paying a dime. As the system nears collapse, it&amp;rsquo;s time to ask who should bear the cost of public cybersecurity infrastructure.</description></item><item><title>Common Security Myths Developers Tell Themselves</title><link>https://windshock.github.io/en/post/2025-04-01-common-security-myths-developers-tell-themselves/</link><pubDate>Tue, 01 Apr 2025 00:00:00 +0000</pubDate><guid>https://windshock.github.io/en/post/2025-04-01-common-security-myths-developers-tell-themselves/</guid><description>This article breaks down common developer security myths—responsibility deflection, overconfidence in technology, and security underestimation—and offers realistic countermeasures.</description></item><item><title>XML-RPC Security Vulnerabilities Analysis and Mitigation Strategies</title><link>https://windshock.github.io/en/post/2025-03-28-xml-rpc-security-vulnerabilities-analysis-and-mitigation-strategies/</link><pubDate>Fri, 28 Mar 2025 00:00:00 +0000</pubDate><guid>https://windshock.github.io/en/post/2025-03-28-xml-rpc-security-vulnerabilities-analysis-and-mitigation-strategies/</guid><description>&lt;p>&lt;img alt="XML-RPC background" loading="lazy" src="https://windshock.github.io/images/post/xmlrpc-security.webp">&lt;/p>
&lt;h2 id="summary">Summary&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>Overview of XML-RPC Vulnerabilities:&lt;/strong> As a lightweight remote call protocol for inter-system communication, XML-RPC is exposed to various threats such as RCE, XXE, DDoS, and privilege escalation.&lt;/li>
&lt;li>&lt;strong>Notable Cases:&lt;/strong> NodeBB (CVE-2023-43187), Apache OFBiz (CVE-2020-9496), PHP XML-RPC (CVE-2005-1921), etc.&lt;/li>
&lt;li>&lt;strong>Real-World Use Cases:&lt;/strong> In addition to WordPress, Bugzilla, ManageEngine, and Apache OFBiz, XML-RPC is still used in some legacy systems.&lt;/li>
&lt;li>&lt;strong>Mitigation Strategies:&lt;/strong> Disabling XML-RPC, enhancing input validation, reinforcing authentication systems, applying up-to-date security patches, implementing access control, and deploying WAFs.&lt;/li>
&lt;/ul>
&lt;h2 id="what-is-xml-rpc">What is XML-RPC?&lt;/h2>
&lt;p>&lt;strong>XML-RPC (XML Remote Procedure Call)&lt;/strong> is a remote procedure call protocol that uses XML as its data format and HTTP as its transport mechanism. Proposed jointly by Dave Winer and Microsoft in 1998, it was designed to simplify cross-platform communication.&lt;/p></description></item><item><title>Common Misconceptions of Security Assessors</title><link>https://windshock.github.io/en/post/2024-06-16-common-misconceptions-of-security-assessors/</link><pubDate>Sun, 16 Jun 2024 00:00:00 +0000</pubDate><guid>https://windshock.github.io/en/post/2024-06-16-common-misconceptions-of-security-assessors/</guid><description>&lt;h1 id="common-misconceptions-of-security-assessors">Common Misconceptions of Security Assessors&lt;/h1>
&lt;p>&lt;img alt="Common Misconceptions Toon" loading="lazy" src="https://windshock.github.io/images/post/misconceptions-of-security-assessors.webp">&lt;/p>
&lt;h2 id="inefficient-vulnerability-evaluation-structure-and-response-methods">Inefficient Vulnerability Evaluation Structure and Response Methods&lt;/h2>
&lt;h3 id="introduction">Introduction&lt;/h3>
&lt;p>As the cybersecurity landscape constantly evolves, vulnerability assessment has become a critical defense against potential security breaches. However, due to common misconceptions, the effectiveness of these evaluations often diminishes. In this article, we will explore the common misconceptions about security vulnerability assessments and suggest effective strategies to overcome these issues, ultimately supporting the improvement of organizational security levels.&lt;/p></description></item></channel></rss>