<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on Code Before Breach</title>
    <link>https://windshock.github.io/en/post/</link>
    <description>Recent content in Posts on Code Before Breach</description>
    <generator>Hugo -- 0.145.0</generator>
    <language>en-US</language>
    <lastBuildDate>Mon, 31 Mar 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://windshock.github.io/en/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How to Block ECH and Mitigate DoH in Enterprise Networks</title>
      <link>https://windshock.github.io/en/post/2025-03-31-dnsmasq-ech-doh-block/</link>
      <pubDate>Mon, 31 Mar 2025 00:00:00 +0000</pubDate>
      <guid>https://windshock.github.io/en/post/2025-03-31-dnsmasq-ech-doh-block/</guid>
      <description>A hands-on guide using dnsmasq to filter SVCB and HTTPS records for disabling ECH and enforcing central DNS policies. Notes that DoH requires separate network-layer policies.</description>
    </item>
    <item>
      <title>XML-RPC Security Vulnerabilities Analysis and Mitigation Strategies</title>
      <link>https://windshock.github.io/en/post/2025-03-28-xml-rpc-security-vulnerabilities-analysis-and-mitigation-strategies/</link>
      <pubDate>Fri, 28 Mar 2025 00:00:00 +0000</pubDate>
      <guid>https://windshock.github.io/en/post/2025-03-28-xml-rpc-security-vulnerabilities-analysis-and-mitigation-strategies/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;XML-RPC background&#34; loading=&#34;lazy&#34; src=&#34;https://windshock.github.io/images/post/xmlrpc-security.png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;summary&#34;&gt;Summary&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Overview of XML-RPC Vulnerabilities:&lt;/strong&gt; As a lightweight remote call protocol for inter-system communication, XML-RPC is exposed to various threats such as RCE, XXE, DDoS, and privilege escalation.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Notable Cases:&lt;/strong&gt; NodeBB (CVE-2023-43187), Apache OFBiz (CVE-2020-9496), PHP XML-RPC (CVE-2005-1921), etc.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Real-World Use Cases:&lt;/strong&gt; In addition to WordPress, Bugzilla, ManageEngine, and Apache OFBiz, XML-RPC is still used in some legacy systems.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Mitigation Strategies:&lt;/strong&gt; Disabling XML-RPC, enhancing input validation, reinforcing authentication systems, applying up-to-date security patches, implementing access control, and deploying WAFs.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;what-is-xml-rpc&#34;&gt;What is XML-RPC?&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;XML-RPC (XML Remote Procedure Call)&lt;/strong&gt; is a remote procedure call protocol that uses XML as its data format and HTTP as its transport mechanism. Proposed jointly by Dave Winer and Microsoft in 1998, it was designed to simplify cross-platform communication.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Review of Citrix Security Policy Effectiveness</title>
      <link>https://windshock.github.io/en/post/2024-11-05-review-of-citrix-security-policy-effectiveness/</link>
      <pubDate>Tue, 05 Nov 2024 00:00:00 +0000</pubDate>
      <guid>https://windshock.github.io/en/post/2024-11-05-review-of-citrix-security-policy-effectiveness/</guid>
      <description>&lt;h1 id=&#34;review-of-citrix-security-policy-effectiveness&#34;&gt;Review of Citrix Security Policy Effectiveness&lt;/h1&gt;
&lt;h2 id=&#34;1-introduction&#34;&gt;1. Introduction&lt;/h2&gt;
&lt;p&gt;Citrix administrators apply security policies to each user’s VDI (Virtual Desktop Infrastructure) through Citrix Group Policy. However, certain structural vulnerabilities in Citrix CSE (Citrix Service Engine) and the Citrix VDI Agent allow for potential bypassing of these security policies.&lt;/p&gt;
&lt;h2 id=&#34;2-security-policy-bypass&#34;&gt;2. Security Policy Bypass&lt;/h2&gt;
&lt;h3 id=&#34;bypass-through-registry-manipulation&#34;&gt;Bypass through Registry Manipulation&lt;/h3&gt;
&lt;p&gt;A security policy bypass is possible by manipulating the registry using a race condition that occurs during the Citrix VDI Agent (PicaSvc2.exe) policy storage process. While Citrix has implemented a stealth patch to mitigate this vulnerability, it is still possible to disable security policies by adjusting registry security settings and denying write permissions.&lt;/p&gt;</description>
    </item>
    <item>
      <title>KPIs Can Cause Incidents!!!</title>
      <link>https://windshock.github.io/en/post/2024-06-20-kpi-causes-accidents/</link>
      <pubDate>Thu, 20 Jun 2024 00:00:00 +0000</pubDate>
      <guid>https://windshock.github.io/en/post/2024-06-20-kpi-causes-accidents/</guid>
      <description>&lt;h2 id=&#34;kpis-can-cause-incidents---bad-metrics-produce-bad-outcomes&#34;&gt;KPIs Can Cause Incidents!!! - Bad metrics produce bad outcomes.&lt;/h2&gt;
&lt;p&gt;Recently, I was going through old emails and found a reply from a junior colleague to a very serious email I had sent. The colleague wrote that after reading my message, they realized they had been mindlessly following instructions without deeper consideration. They promised to carefully consider the ethical implications and correctness of every task, and to proceed based on their own judgment going forward.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Common Misconceptions of Security Assessors</title>
      <link>https://windshock.github.io/en/post/2024-06-16-common-misconceptions-of-security-assessors/</link>
      <pubDate>Sun, 16 Jun 2024 00:00:00 +0000</pubDate>
      <guid>https://windshock.github.io/en/post/2024-06-16-common-misconceptions-of-security-assessors/</guid>
      <description>&lt;h1 id=&#34;common-misconceptions-of-security-assessors&#34;&gt;Common Misconceptions of Security Assessors&lt;/h1&gt;
&lt;h2 id=&#34;inefficient-vulnerability-evaluation-structure-and-response-methods&#34;&gt;Inefficient Vulnerability Evaluation Structure and Response Methods&lt;/h2&gt;
&lt;h3 id=&#34;introduction&#34;&gt;Introduction&lt;/h3&gt;
&lt;p&gt;As the cybersecurity landscape constantly evolves, vulnerability assessment has become a critical defense against potential security breaches. However, due to common misconceptions, the effectiveness of these evaluations often diminishes. In this article, we will explore the common misconceptions about security vulnerability assessments and suggest effective strategies to overcome these issues, ultimately supporting the improvement of organizational security levels.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Can Development Culture Influence Security Levels?</title>
      <link>https://windshock.github.io/en/post/2024-05-22-can-development-culture-influence-security-levels/</link>
      <pubDate>Wed, 22 May 2024 00:00:00 +0000</pubDate>
      <guid>https://windshock.github.io/en/post/2024-05-22-can-development-culture-influence-security-levels/</guid>
      <description>&lt;h1 id=&#34;can-development-culture-influence-security-levels&#34;&gt;Can Development Culture Influence Security Levels?&lt;/h1&gt;
&lt;h2 id=&#34;evaluating-code-quality-and-security-levels-using-static-analysis-tools-joern&#34;&gt;Evaluating Code Quality and Security Levels Using Static Analysis Tools (Joern)&lt;/h2&gt;
&lt;h3 id=&#34;background&#34;&gt;Background&lt;/h3&gt;
&lt;p&gt;Unlike companies like &lt;a href=&#34;https://windshock.github.io/en/post/2024-05-22-can-development-culture-influence-security-levels/#google-development-culture&#34;&gt;Google&lt;/a&gt; with an open and collaborative development culture, in some organizations that lack such culture, the quality of the code, including security levels, can be heavily influenced by the individual’s capability. In particular, developers who tend to write poor quality code, such as using the &lt;a href=&#34;https://windshock.github.io/en/post/2024-05-22-can-development-culture-influence-security-levels/#strcpy-function-risk&#34;&gt;strcpy function&lt;/a&gt;, can have their code quality and security levels assessed by utilizing &lt;a href=&#34;https://windshock.github.io/en/post/2024-05-22-can-development-culture-influence-security-levels/#static-analysis-tools&#34;&gt;static analysis tools&lt;/a&gt; (Joern, CodeQL, etc.) with &lt;a href=&#34;https://windshock.github.io/en/post/2024-05-22-can-development-culture-influence-security-levels/#custom-rule-examples&#34;&gt;custom rules&lt;/a&gt;. As a result, even in situations where the development culture is lacking, code quality and security levels can be improved, leading to the production of good-quality code.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Bypassing citrix policy is not a vulnerability, but it can be a violation of the law</title>
      <link>https://windshock.github.io/en/post/2023-04-27-bypassing-citrix-policy-is-not-a-vulnerability-but-it-can-be-a-violation-of-the-law/</link>
      <pubDate>Thu, 27 Apr 2023 00:00:00 +0000</pubDate>
      <guid>https://windshock.github.io/en/post/2023-04-27-bypassing-citrix-policy-is-not-a-vulnerability-but-it-can-be-a-violation-of-the-law/</guid>
      <description>&lt;h3 id=&#34;bypassing-citrix-policy-is-not-a-vulnerability-but-a-legal-violation&#34;&gt;Bypassing Citrix Policy is Not a Vulnerability but a Legal Violation&lt;/h3&gt;
&lt;h4 id=&#34;note&#34;&gt;Note!!&lt;/h4&gt;
&lt;p&gt;Based on discussions with Citrix through &lt;a href=&#34;https://kb.cert.org/vince/comm/case/1022/&#34;&gt;VINCE&lt;/a&gt; from cert.org, it was concluded that this is not classified as a vulnerability because it requires administrative privileges. Therefore, I can share this information without security concerns. However, for security reasons, I do not recommend using Xendesktop (VDI) in special environments such as logically isolated or closed networks. If VDI must be used in such environments, please ensure that administrator privileges are removed and security-specific software is installed.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Strengthening cybersecurity through government ngos and bug bounty programs</title>
      <link>https://windshock.github.io/en/post/2023-04-18-strengthening-cybersecurity-through-government-ngos-and-bug-bounty-programs/</link>
      <pubDate>Tue, 18 Apr 2023 00:00:00 +0000</pubDate>
      <guid>https://windshock.github.io/en/post/2023-04-18-strengthening-cybersecurity-through-government-ngos-and-bug-bounty-programs/</guid>
      <description>&lt;p&gt;﻿
Strengthening Cybersecurity Through Government NGOs and Bug Bounty Programs: A Look at Security Taxes and Their Implementation in Various Countries&lt;/p&gt;
&lt;p&gt;In today&amp;rsquo;s digital age, information security has become a critical concern for individuals, businesses, and governments alike. Cyber attacks and data breaches have become increasingly common and sophisticated, and the consequences can be devastating. This is why it is essential to have robust cybersecurity measures in place to protect against these threats.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Security threats and mitigation strategies for java reflection</title>
      <link>https://windshock.github.io/en/post/2019-09-03-security-threats-and-mitigation-strategies-for-java-reflection/</link>
      <pubDate>Tue, 03 Sep 2019 00:00:00 +0000</pubDate>
      <guid>https://windshock.github.io/en/post/2019-09-03-security-threats-and-mitigation-strategies-for-java-reflection/</guid>
      <description>&lt;h3 id=&#34;security-threats-and-mitigation-strategies-for-java-reflection&#34;&gt;Security Threats and Mitigation Strategies for Java Reflection&lt;/h3&gt;
&lt;p&gt;The &lt;strong&gt;Java Reflection API&lt;/strong&gt; is a powerful tool that allows dynamic manipulation of classes, methods, and interfaces at runtime. However, due to its flexibility, it introduces significant security risks, as attackers can exploit it to gain unauthorized access to systems. In this article, we will explore the security threats posed by Java Reflection and outline strategies to mitigate these risks.&lt;/p&gt;
&lt;h4 id=&#34;the-risks-of-using-reflection-api&#34;&gt;The Risks of Using Reflection API&lt;/h4&gt;
&lt;p&gt;Reflection is commonly used to inspect the structure of objects or dynamically invoke methods at runtime. However, without a proper &lt;strong&gt;Security Manager&lt;/strong&gt;, sensitive methods (like &lt;code&gt;execute&lt;/code&gt;, &lt;code&gt;eval&lt;/code&gt;, etc.) can be accessed, leading to potential &lt;strong&gt;Remote Code Execution (RCE)&lt;/strong&gt; attacks.&lt;/p&gt;</description>
    </item>
    <item>
      <title>About the XSSAudit</title>
      <link>https://windshock.github.io/en/post/2019-08-08-about-the-xssaudit/</link>
      <pubDate>Thu, 08 Aug 2019 00:00:00 +0000</pubDate>
      <guid>https://windshock.github.io/en/post/2019-08-08-about-the-xssaudit/</guid>
      <description>&lt;h2 id=&#34;why-was-the-xssaudit-feature-removed-in-chrome&#34;&gt;Why Was the XSSAudit Feature Removed in Chrome?&lt;/h2&gt;
&lt;p&gt;The Google Security Team proposed to the Chrome development team to remove the &lt;a href=&#34;https://bugs.chromium.org/p/chromium/issues/detail?id=898081&#34;&gt;XSSAudit feature&lt;/a&gt;. Although the only rationale provided was that the feature could be bypassed (as argued in a paper by &lt;a href=&#34;mailto:evn@google.com&#34;&gt;evn@google.com&lt;/a&gt;), it initially seemed unlikely that removal would proceed. However, it was ultimately decided that the feature would be completely eliminated in Chrome.&lt;/p&gt;
&lt;p&gt;The main point of the &lt;a href=&#34;https://windshock.github.io/pdf/p1709-lekiesA.pdf&#34;&gt;paper&lt;/a&gt; is that bypass methods using targets within new JavaScript frameworks are difficult to defend against. Therefore, it proposes a shift from the existing mitigation approach (the xssaudit filter) to an isolation/prevention method, namely Content Security Policy (CSP).&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
