<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on Code Before Breach</title>
    <link>https://windshock.github.io/ko/post/</link>
    <description>Recent content in Posts on Code Before Breach</description>
    <generator>Hugo -- 0.145.0</generator>
    <language>ko-KR</language>
    <lastBuildDate>Mon, 28 Apr 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://windshock.github.io/ko/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>통신 보안 심층 분석 리포트: SKT 해킹 사건과 글로벌 사례 분석</title>
      <link>https://windshock.github.io/ko/post/2025-04-28-telecom-security-breach-analysis/</link>
      <pubDate>Mon, 28 Apr 2025 00:00:00 +0000</pubDate>
      <guid>https://windshock.github.io/ko/post/2025-04-28-telecom-security-breach-analysis/</guid>
      <description>2025년 SKT 해킹 사건을 중심으로, 통신 인프라의 핵심 보안 구조와 과거 글로벌 해킹 사례(Gemalto, APT10, Circles)를 심층 분석한 보고서입니다. 가입자 인증 시스템(Ki, SUPI/SUCI)과 5G SA/NSA 차이점까지 다루었습니다.</description>
    </item>
    <item>
      <title>CVE-2019-17570 Apache XML-RPC 취약점 분석 보고서</title>
      <link>https://windshock.github.io/ko/post/2025-04-24-cve-2019-17570-apache-xmlrpc/</link>
      <pubDate>Thu, 24 Apr 2025 00:00:00 +0000</pubDate>
      <guid>https://windshock.github.io/ko/post/2025-04-24-cve-2019-17570-apache-xmlrpc/</guid>
      <description>Apache XML-RPC 라이브러리의 역직렬화 취약점 CVE-2019-17570에 대한 상세 분석과 패치 방법 및 안전한 구현 방법을 제시합니다.</description>
    </item>
    <item>
      <title>내 정보, 고양이 손에 맡겼나요?</title>
      <link>https://windshock.github.io/ko/post/2025-04-21-expert-personal-data-report/</link>
      <pubDate>Mon, 21 Apr 2025 00:00:00 +0000</pubDate>
      <guid>https://windshock.github.io/ko/post/2025-04-21-expert-personal-data-report/</guid>
      <description>2025년 카카오페이 사건은 형식적 동의와 자율 규제의 한계를 드러냈습니다. AI 기반 DPIA 검증과 시민 감시를 통해 데이터 민주주의를 실현해야 합니다.</description>
    </item>
    <item>
      <title>공짜 점심은 없지만, 보안에는 공짜가 있었다</title>
      <link>https://windshock.github.io/ko/post/2025-04-17-theres-no-such-thing-as-a-free-lunch-but-security-was-free/</link>
      <pubDate>Thu, 17 Apr 2025 00:00:00 +0000</pubDate>
      <guid>https://windshock.github.io/ko/post/2025-04-17-theres-no-such-thing-as-a-free-lunch-but-security-was-free/</guid>
      <description>전 세계 보안 커뮤니티는 수십 년 동안 CVE 시스템에 의존해왔지만, 그 대가를 지불한 적은 거의 없습니다. 이제 이 공공 보안 인프라의 지속 가능성을 위해 누가 비용을 부담해야 할지 물어야 할 때입니다.</description>
    </item>
    <item>
      <title>AI 시대, 직원은 고립되고 조직은 번창한다</title>
      <link>https://windshock.github.io/ko/post/2025-04-07-evil-management-manual/</link>
      <pubDate>Mon, 07 Apr 2025 00:00:00 +0000</pubDate>
      <guid>https://windshock.github.io/ko/post/2025-04-07-evil-management-manual/</guid>
      <description>&lt;p&gt;📂 &lt;strong&gt;[기밀 문서] 유출본&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&#34;ai-시대-직원은-고립되고-조직은-번창한다&#34;&gt;《AI 시대, 직원은 고립되고 조직은 번창한다》&lt;/h1&gt;
&lt;h3 id=&#34;-악덕-경영-매뉴얼-v10&#34;&gt;― 악덕 경영 매뉴얼 v1.0&lt;/h3&gt;
&lt;h2 id=&#34;ai-시대-고립된-인간&#34;&gt;&lt;img alt=&#34;AI 시대, 고립된 인간&#34; loading=&#34;lazy&#34; src=&#34;https://windshock.github.io/images/post/Employees-Are-Isolated-and-Organizations-Thrive.webp&#34;&gt;&lt;/h2&gt;
&lt;h2 id=&#34;1-인간관계-제거하라&#34;&gt;1. 인간관계? 제거하라&lt;/h2&gt;
&lt;p&gt;사람들끼리 친해지면 무슨 일이 생기나?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;뒷담화&lt;/li&gt;
&lt;li&gt;집단 퇴사&lt;/li&gt;
&lt;li&gt;연대와 저항&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;✅ &lt;strong&gt;해결책&lt;/strong&gt;: AI 중심 커뮤니케이션 시스템 구축&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;회의 요약, 리마인드, 보고 자동화&lt;/li&gt;
&lt;li&gt;인간 대화 줄이기 → 감정 소모 차단&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;“팀워크는 비용이다. 효율은 조용한 개인에게서 나온다.”&lt;/p&gt;&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2 id=&#34;2-고립은-통제다&#34;&gt;2. 고립은 통제다&lt;/h2&gt;
&lt;p&gt;외로운 직원은 조용히 일한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;고민을 공유할 동료 없음&lt;/li&gt;
&lt;li&gt;스트레스를 말로 풀 곳 없음&lt;/li&gt;
&lt;li&gt;문제 제기 전에 지침 따름&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;✅ &lt;strong&gt;도입 전략&lt;/strong&gt;:&lt;/p&gt;</description>
    </item>
    <item>
      <title>인간의 자리: AI 시대에 창작자의 권리를 선언하며</title>
      <link>https://windshock.github.io/ko/post/2025-04-03-human-place-in-ai-age/</link>
      <pubDate>Thu, 03 Apr 2025 00:00:00 +0000</pubDate>
      <guid>https://windshock.github.io/ko/post/2025-04-03-human-place-in-ai-age/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Abstract illustration representing human presence in AI&#34; loading=&#34;lazy&#34; src=&#34;https://windshock.github.io/images/human-place-abstract.webp&#34;&gt;&lt;/p&gt;
&lt;p&gt;우리는 지금,&lt;br&gt;
정보가 넘쳐나고 기술이 솟구치는 시대에 살고 있다.&lt;br&gt;
AI는 인간의 말을 흉내내고, 사고를 요약하고, 예측까지 해낸다.&lt;br&gt;
하지만 그 와중에 점점 잊히는 것이 있다.&lt;/p&gt;
&lt;p&gt;그건 바로,&lt;br&gt;
&lt;strong&gt;“누가 처음 생각했는가”&lt;/strong&gt;,&lt;br&gt;
&lt;strong&gt;“누가 그것을 연결했는가”&lt;/strong&gt;,&lt;br&gt;
&lt;strong&gt;“누가 의미를 부여했는가”&lt;/strong&gt; 다.&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;ai는-정보를-다룬다&#34;&gt;AI는 정보를 다룬다.&lt;/h3&gt;
&lt;p&gt;그러나 &lt;strong&gt;통찰은 인간의 것&lt;/strong&gt;이다.&lt;/p&gt;
&lt;p&gt;Citrix VDI 정책 우회를 단순한 기술적 취약점이 아닌,&lt;br&gt;
&lt;strong&gt;법적 위반&lt;/strong&gt;,&lt;br&gt;
&lt;strong&gt;망분리 정책의 붕괴&lt;/strong&gt;,&lt;br&gt;
&lt;strong&gt;금융 규제의 현실&lt;/strong&gt;이라는 세 가지 관점으로 동시에 엮어낸 것은,&lt;br&gt;
GPT가 할 수 있는 일이 아니다.&lt;br&gt;
그건 인간만이 할 수 있는 &lt;strong&gt;맥락의 조합&lt;/strong&gt;이며,&lt;br&gt;
&lt;strong&gt;규범과 현실을 함께 고민하는 창작 행위&lt;/strong&gt;다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>개발자들 말하는 보안에 대한 흔한 거짓말</title>
      <link>https://windshock.github.io/ko/post/2025-04-01-common-security-myths-developers-tell-themselves/</link>
      <pubDate>Tue, 01 Apr 2025 00:00:00 +0000</pubDate>
      <guid>https://windshock.github.io/ko/post/2025-04-01-common-security-myths-developers-tell-themselves/</guid>
      <description>개발자들이 보안에 대해 자주 믿는 &amp;lsquo;책임 전가형&amp;rsquo;, &amp;lsquo;기술 과신형&amp;rsquo;, &amp;lsquo;보안 과소평가형&amp;rsquo; 거짓말을 분석하고, 현실적인 대응 방안을 제시합니다.</description>
    </item>
    <item>
      <title>기업 네트워크 보안을 위한 ECH 차단 및 DoH 대응 전략</title>
      <link>https://windshock.github.io/ko/post/2025-03-31-dnsmasq-ech-doh-block/</link>
      <pubDate>Mon, 31 Mar 2025 00:00:00 +0000</pubDate>
      <guid>https://windshock.github.io/ko/post/2025-03-31-dnsmasq-ech-doh-block/</guid>
      <description>dnsmasq를 사용하여 SVCB와 HTTPS 레코드를 필터링함으로써 ECH를 비활성화하고 중앙 DNS 정책을 적용하는 실습 가이드. DoH 차단은 별도의 네트워크 정책이 필요함을 함께 안내합니다.</description>
    </item>
    <item>
      <title>XML-RPC 보안 취약점 분석 및 완화 전략</title>
      <link>https://windshock.github.io/ko/post/2025-03-28-xml-rpc-security-vulnerabilities-analysis-and-mitigation-strategies/</link>
      <pubDate>Fri, 28 Mar 2025 08:39:00 +0900</pubDate>
      <guid>https://windshock.github.io/ko/post/2025-03-28-xml-rpc-security-vulnerabilities-analysis-and-mitigation-strategies/</guid>
      <description>&lt;hr&gt;
&lt;p&gt;&lt;img alt=&#34;xmlrpc 배경화면&#34; loading=&#34;lazy&#34; src=&#34;https://windshock.github.io/images/post/xmlrpc-security.webp&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;주요-요약&#34;&gt;주요 요약&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;XML-RPC 취약점 개요:&lt;/strong&gt; 시스템 간 통신을 위한 경량 원격 호출 프로토콜인 XML-RPC는 명령 주입(RCE), XXE, DDoS, 권한 상승 등 다양한 위협에 노출됩니다.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;대표 사례:&lt;/strong&gt; NodeBB (CVE-2023-43187), Apache OFBiz (CVE-2020-9496), PHP XML-RPC (CVE-2005-1921) 등.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;실제 사용처:&lt;/strong&gt; WordPress, Bugzilla, ManageEngine, Apache OFBiz 외에도 일부 레거시 시스템에서 활용 중입니다.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;완화 전략:&lt;/strong&gt; XML-RPC 비활성화, 입력 검증 강화, 인증 체계 강화, 최신 보안 패치 적용, 접근 제어 및 WAF 도입.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;xml-rpc란-무엇인가&#34;&gt;XML-RPC란 무엇인가?&lt;/h2&gt;
&lt;p&gt;**XML-RPC (XML Remote Procedure Call)**는 XML을 데이터 포맷으로, HTTP를 전송 수단으로 사용하는 원격 프로시저 호출(RPC) 프로토콜입니다. 1998년 Dave Winer와 Microsoft가 공동 제안했으며, 플랫폼 간 통신을 간편화하기 위해 설계되었습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>시트릭스 보안 정책 효과성 검토</title>
      <link>https://windshock.github.io/ko/post/2024-11-05-review-of-citrix-security-policy-effectiveness/</link>
      <pubDate>Tue, 05 Nov 2024 00:00:00 +0000</pubDate>
      <guid>https://windshock.github.io/ko/post/2024-11-05-review-of-citrix-security-policy-effectiveness/</guid>
      <description>시트릭스 관리자들은 Citrix 그룹 정책을 통해 각 사용자의 VDI(가상 데스크탑 인프라)에 보안 정책을 적용합니다. 그러나 Citrix CSE(시트릭스 서비스 엔진)와 Citrix VDI 에이전트 내의 일부 구조적 취약점으로 인해 이러한 보안 정책을 우회할 가능성이 존재합니다.</description>
    </item>
    <item>
      <title>KPI가 사고를 일으킨다!!!</title>
      <link>https://windshock.github.io/ko/post/2024-06-20-kpi-causes-accidents/</link>
      <pubDate>Thu, 20 Jun 2024 00:00:00 +0000</pubDate>
      <guid>https://windshock.github.io/ko/post/2024-06-20-kpi-causes-accidents/</guid>
      <description>&lt;h2 id=&#34;kpi가-사고를-일으킨다---잘못된-지표는-잘못된-결과를-낳는다&#34;&gt;KPI가 사고를 일으킨다!!! - 잘못된 지표는 잘못된 결과를 낳는다.&lt;/h2&gt;
&lt;p&gt;&lt;img alt=&#34;KPIs Incidents Toon&#34; loading=&#34;lazy&#34; src=&#34;https://windshock.github.io/images/post/kpis_incidents.webp&#34;&gt;&lt;/p&gt;
&lt;p&gt;오래전 메일을 뒤적이다가, 내가 너무 진지하게 보낸 메일에 대한 후배의 답변을 확인했다. 매니저님의 메일을 받고, 깊이 고민하지 않고 지시대로만 일을 수행하고 있음을 깨달았다. 어떤 업무 지시를 받든 해당 업무에 윤리적 이슈가 없는지, 그리고 그대로 수행하는 것이 맞는지 확실히 생각해보고 내 의지대로 진행해야겠다고 다짐했다.&lt;/p&gt;
&lt;p&gt;메일을 자세히 살펴보니, 그 후배는 취약점 현황 시스템을 관리하던 사람이었고, 팀장의 명령으로 고위험 취약점의 위험도를 일괄 낮추도록 조치한 뒤, 내가 윤리적 문제를 제기한 메일에 대해 답변한 것이었다. (오랜 시간이 지난 지금은 상황이 달라졌지만, 당시에는 참 착한 후배였다&amp;hellip;)&lt;/p&gt;</description>
    </item>
    <item>
      <title>보안진단 담당자의 흔한 착각</title>
      <link>https://windshock.github.io/ko/post/2024-06-16-common-misconceptions-of-security-assessors/</link>
      <pubDate>Sun, 16 Jun 2024 00:00:00 +0000</pubDate>
      <guid>https://windshock.github.io/ko/post/2024-06-16-common-misconceptions-of-security-assessors/</guid>
      <description>&lt;h1 id=&#34;보안진단-담당자의-흔한-착각&#34;&gt;보안진단 담당자의 흔한 착각&lt;/h1&gt;
&lt;p&gt;&lt;img alt=&#34;Common Misconceptions Toon&#34; loading=&#34;lazy&#34; src=&#34;https://windshock.github.io/images/post/misconceptions-of-security-assessors.webp&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;비효율적인-취약점-평가-구조와-대응-방법&#34;&gt;비효율적인 취약점 평가 구조와 대응 방법&lt;/h2&gt;
&lt;h1 id=&#34;서론&#34;&gt;서론&lt;/h1&gt;
&lt;p&gt;사이버 보안 환경이 끊임없이 변화하면서 보안 취약점 평가는 잠재적인 보안 침해에 대한 주요 방어수단으로 자리잡고 있습니다. 그러나 이에 대한 일반적인 오해로 인해 평가의 실효성이 저하되는 경우가 많습니다. 본 글에서는 보안 취약점 평가에 대한 잘못된 인식을 살펴보고, 이를 극복할 수 있는 효과적인 전략을 제시함으로써 조직의 보안 수준 향상을 지원하고자 합니다.&lt;/p&gt;
&lt;h1 id=&#34;보안-취약점-평가에-대한-잘못된-인식&#34;&gt;보안 취약점 평가에 대한 잘못된 인식&lt;/h1&gt;
&lt;h2 id=&#34;1-모든-취약점을-반드시-찾아내야-한다는-믿음&#34;&gt;1. 모든 취약점을 반드시 찾아내야 한다는 믿음&lt;/h2&gt;
&lt;p&gt;보안 취약점 평가 담당자들 사이에는 모든 취약점을 반드시 찾아내야 한다는 생각이 팽배합니다. 이는 인간 평가자의 한계를 이해하지 못한 것입니다. Tyma 등(2019)[1]의 연구에 따르면, 광범위한 노력에도 불구하고 일부 취약점만이 발견되었다고 합니다. 또한 회사의 승인 없이 취약점을 분석한 외부인에 대해 배타적인 자세를 보이는 경우도 있습니다. 이러한 인식의 한계는 평가 담당자들에게 좌절감과 불만을 야기할 수 있습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>개발문화가 보안수준에 영향을 미칠 수 있을까?</title>
      <link>https://windshock.github.io/ko/post/2024-05-22-can-development-culture-influence-security-levels/</link>
      <pubDate>Wed, 22 May 2024 00:00:00 +0000</pubDate>
      <guid>https://windshock.github.io/ko/post/2024-05-22-can-development-culture-influence-security-levels/</guid>
      <description>&lt;h1 id=&#34;개발문화가-보안수준에-영향을-미칠-수-있을까&#34;&gt;개발문화가 보안수준에 영향을 미칠 수 있을까?&lt;/h1&gt;
&lt;p&gt;&lt;img alt=&#34;Development Culture&#34; loading=&#34;lazy&#34; src=&#34;https://windshock.github.io/images/post/development-culture.webp&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;정적-분석-도구joern를-이용한-코드-품질과-보안-수준의-평가&#34;&gt;정적 분석 도구(joern)를 이용한 코드 품질과 보안 수준의 평가&lt;/h2&gt;
&lt;h1 id=&#34;배경&#34;&gt;배경&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://windshock.github.io/ko/post/2024-05-22-can-development-culture-influence-security-levels/#%ea%b5%ac%ea%b8%80%ec%9d%98-%ea%b0%9c%eb%b0%9c%eb%ac%b8%ed%99%94&#34;&gt;개방적이고 협업 중심의 개발문화를 가진 구글&lt;/a&gt; 등 회사와 달리, &lt;a href=&#34;https://windshock.github.io/ko/post/2024-05-22-can-development-culture-influence-security-levels/#%ea%b0%9c%eb%b0%9c%eb%ac%b8%ed%99%94%ea%b0%80-%ec%97%86%eb%8a%94-%ec%a1%b0%ec%a7%81&#34;&gt;그렇지 못한 일부 조직&lt;/a&gt;에서는 개인의 역량에 따라 코드의 품질 - 보안 수준을 포함하여 - 이 좌우될 수 있습니다. 특히, C 코드에서 &lt;a href=&#34;https://windshock.github.io/ko/post/2024-05-22-can-development-culture-influence-security-levels/#strcpy-%ed%95%a8%ec%88%98%ec%9d%98-%ec%9c%84%ed%97%98%ec%84%b1&#34;&gt;strcpy 함수&lt;/a&gt;를 사용하는 등의 품질 낮은 코드를 작성하는 경향이 있는 개발자들에게 &lt;a href=&#34;https://windshock.github.io/ko/post/2024-05-22-can-development-culture-influence-security-levels/#%ec%a0%95%ec%a0%81-%eb%b6%84%ec%84%9d-%eb%8f%84%ea%b5%ac&#34;&gt;정적 분석 도구&lt;/a&gt;(joern, codeQL 등)을 &lt;a href=&#34;https://windshock.github.io/ko/post/2024-05-22-can-development-culture-influence-security-levels/#%ec%bb%a4%ec%8a%a4%ed%85%80-%eb%a3%b0-%ec%98%88%ec%8b%9c&#34;&gt;커스텀 룰&lt;/a&gt;을 활용하여 코드의 품질과 보안 수준을 평가하여 제공할 수 있습니다. 결과적으로 개발 문화가 부족한 제한된 상황에서도 코드 품질과 동시에 보안수준이 향상되는, Good한 수준의 코드를 기대할 수 있습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>시트릭스 정책 우회는 취약점이 아니라 법률 위반이다</title>
      <link>https://windshock.github.io/ko/post/2023-04-27-bypassing-citrix-policy-is-not-a-vulnerability-but-it-can-be-a-violation-of-the-law/</link>
      <pubDate>Thu, 27 Apr 2023 00:00:00 +0000</pubDate>
      <guid>https://windshock.github.io/ko/post/2023-04-27-bypassing-citrix-policy-is-not-a-vulnerability-but-it-can-be-a-violation-of-the-law/</guid>
      <description>&lt;h3 id=&#34;시트릭스-정책-우회는-취약점이-아니라-법률-위반이다&#34;&gt;시트릭스 정책 우회는 취약점이 아니라 법률 위반이다&lt;/h3&gt;
&lt;h4 id=&#34;주의&#34;&gt;주의!!&lt;/h4&gt;
&lt;p&gt;cert.org의 &lt;a href=&#34;https://kb.cert.org/vince/comm/case/1022/&#34;&gt;VINCE&lt;/a&gt;를 통한 Citrix와의 논의를 바탕으로, 이 문제는 관리 권한이 필요하기 때문에 취약점으로 분류되지 않는 것으로 결론지어졌습니다. 따라서 보안상의 문제 없이 이 정보를 공유할 수 있습니다. 그러나 보안상의 이유로, 논리적으로 격리되거나 폐쇄된 네트워크와 같은 특수 환경에서는 Xendesktop (VDI)의 사용을 권장하지 않습니다. 만약 VDI를 반드시 사용해야 한다면, 관리자 권한을 제거하고 보안 전용 소프트웨어를 설치해야 합니다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;관리자 권한이 필요하다는 점은 위험을 낮출 수 있지만, 잠재적인 영향력을 완전히 제거하지는 않습니다. 아래는 Citrix 정책이 어떻게 우회될 수 있는지에 대한 상세한 기술 설명입니다.&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>정부 NGO 및 버그 바운티 프로그램을 통한 사이버 보안 강화</title>
      <link>https://windshock.github.io/ko/post/2023-04-18-strengthening-cybersecurity-through-government-ngos-and-bug-bounty-programs/</link>
      <pubDate>Tue, 18 Apr 2023 00:00:00 +0000</pubDate>
      <guid>https://windshock.github.io/ko/post/2023-04-18-strengthening-cybersecurity-through-government-ngos-and-bug-bounty-programs/</guid>
      <description>&lt;p&gt;정부 NGO 및 버그 바운티 프로그램을 통한 사이버 보안 강화: 보안세와 그 실행 사례 살펴보기&lt;/p&gt;
&lt;p&gt;오늘날의 디지털 시대에서 정보 보안은 개인, 기업, 그리고 정부 모두에게 중요한 이슈가 되었습니다. 사이버 공격과 데이터 유출이 점점 더 빈번해지고 정교해지면서 그 결과는 매우 치명적일 수 있습니다. 이러한 위협에 대비하기 위해 강력한 사이버 보안 대책을 마련하는 것이 필수적입니다.&lt;/p&gt;
&lt;p&gt;최근 인기를 얻고 있는 한 가지 접근 방식은 정부 NGO(비정부기구)와 버그 바운티 프로그램의 활용입니다. 이 프로그램들은 개인과 조직이 디지털 시스템의 취약점과 약점을 식별하고 신고하도록 장려하여, 적시에 효과적인 대응을 가능하게 합니다. 이들은 포괄적인 사이버 보안 전략의 핵심 요소로서, 그 중요성은 아무리 강조해도 지나치지 않습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>자바 리플렉션의 보안 위협과 완화 전략</title>
      <link>https://windshock.github.io/ko/post/2019-09-03-security-threats-and-mitigation-strategies-for-java-reflection/</link>
      <pubDate>Tue, 03 Sep 2019 00:00:00 +0000</pubDate>
      <guid>https://windshock.github.io/ko/post/2019-09-03-security-threats-and-mitigation-strategies-for-java-reflection/</guid>
      <description>**자바 리플렉션 API**는 런타임에 클래스, 메서드, 인터페이스를 동적으로 조작할 수 있게 해주는 강력한 도구입니다. 하지만 그 유연성 때문에 공격자가 이를 악용해 시스템에 무단 접근할 수 있는 심각한 보안 위험이 발생합니다. 본 문서에서는 자바 리플렉션이 야기하는 보안 위협을 살펴보고, 이러한 위험을 완화하기 위한 전략들을 설명합니다.</description>
    </item>
    <item>
      <title>About the XSSAudit</title>
      <link>https://windshock.github.io/ko/post/2019-08-08-about-the-xssaudit/</link>
      <pubDate>Thu, 08 Aug 2019 00:00:00 +0000</pubDate>
      <guid>https://windshock.github.io/ko/post/2019-08-08-about-the-xssaudit/</guid>
      <description>&lt;h2 id=&#34;chrome에서-xssaudit-기능이-제거하는-이유&#34;&gt;Chrome에서 XSSAudit 기능이 제거하는 이유?&lt;/h2&gt;
&lt;p&gt;Google 보안팀에서는 Chrome 개발팀에게 &lt;a href=&#34;https://bugs.chromium.org/p/chromium/issues/detail?id=898081&#34;&gt;XSSAudit 기능을 제거하자는 제안&lt;/a&gt;을 했지만, Google 보안팀이 제시한 근거는 우회 가능하다는 내용( &lt;a href=&#34;mailto:evn@google.com&#34;&gt;evn@google.com&lt;/a&gt;의 논문)뿐이라 제거까지 가지 않을 것 같았지만, &lt;a href=&#34;https://groups.google.com/a/chromium.org/forum/#!msg/blink-dev/TuYw-EZhO9g/blGViehIAwAJ&#34;&gt;Chrome version 에서는 완전히 제외&lt;/a&gt;되는 것으로 결정되었습니다.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://windshock.github.io/pdf/p1709-lekiesA.pdf&#34;&gt;논문&lt;/a&gt;의 주요 내용은 신규 javascript framework의 garget을 이용한 우회 방법은 방어하기 어려우므로, 기존 완화하는 방법(xssaudit filter)에서  격리/예방하는 방법(Content Security Policy, 이하 CSP)으로 변화하자는 것이 주요 내용입니다.&lt;/p&gt;
&lt;h2 id=&#34;xssaudit은-유용하지-않았던가&#34;&gt;XSSAudit은 유용하지 않았던가?&lt;/h2&gt;
&lt;p&gt;Google과 같은 업체 입장에서는 XSSAudit 기능에 의해 유지 비용이 소모되고 경쟁 업체(MS 등) 브라우저보다 성능이 느려진다면, 이 기능은 제거하고 싶은 것이 당연할 겁니다. (실제로 MS EDGE에서 해당 기능을 제거하였습니다.)&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
